{
  "hash": "9aae22ad542d9cf1125b7a19b96cdcd8",
  "result": {
    "markdown": "---\ntitle: \"Data Acquisition\"\nauthor: \"Ana Jade\"\n---\n\n\nThe goal of this second challenge is to extract information from the web. This page will explain how this was done.\n\n# Load libraries\n\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-1_4d90c0be4fd11c89eaf640c313661dbd'}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(tidyverse) # Main Package - Loads dplyr, purrr, etc.\nlibrary(gtrendsR)\nlibrary(rvest)     # HTML Hacking & Web Scraping\n```\n:::\n\n\n# Get some data via an API\nFor this exercise, I chose to get the history of Google searches for Eurovision in the last 3 months. I chose to plot the results for some of my favorite entries by defining the \"geo\" parameter of the gtrends function. \n\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-2_a54395de2897a91e3dba9e1b1cf07afe'}\n\n```{.r .cell-code}\nres <- gtrends(c(\"Eurovision Song Contest\"),\n               geo=c(\"DE\", \"FI\", \"NO\", \"SI\", \"HR\"),\n               time = \"today 3-m\")\n```\n:::\n\n\nHere are the correspond ISO codes for the countries that will be plotted: Germany (DE), Finland (FI), Norway (NO), Slovenia (SI), Croatia (HR)\n\nHere is a plot of the results:\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-3_bc79b60a5fc18395ec5f4618e5bb29c3'}\n\n```{.r .cell-code}\nplot(res)\n```\n\n::: {.cell-output-display}\n![](02_data_acquisition_files/figure-html/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n\n# Scrape data from a competitor website\nRadon bikes was chosen to perform this analysis. \n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-4_68bf723d157f51ab2eefdc397ce51017'}\n\n```{.r .cell-code}\n# Define URL\nurl_hardtail <- \"https://www.radon-bikes.de/mountainbike/hardtail/\"\nhtml_hardtail    <- read_html(url_hardtail)\n```\n:::\n\n\nThe SelectorGadget tool was used to get the name of the css nodes for the bike names and bike prices. \n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-5_ccf8e7dc166f756d6aa0c3a4140a1cc3'}\n\n```{.r .cell-code}\n# Extract bike info\nbike_names <- list(html_hardtail %>% html_nodes(css = \".a-heading--medium\") %>%  html_text())\nbike_names\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [[1]]\n#> [1] \"JEALOUS\"    \"JEALOUS AL\" \"CRAGGER\"    \"ZR TEAM\"    \"ZR LADY\"   \n#> [6] \"SLUSH\"\n```\n:::\n\n```{.r .cell-code}\nbike_prices <- list(html_hardtail %>% html_nodes(css = \".currentPrice\") %>%  html_text())\nbike_prices\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [[1]]\n#>  [1] \"2999\" \"\"     \"1199\" \"\"     \"1399\" \"\"     \"749\"  \"\"     \"599\"  \"\"    \n#> [11] \"299\"  \"\"\n```\n:::\n:::\n\nFor some reason, there were some empty xml nodes that were also selected along with the bike prices. This line of code simply eliminates those empty elements.\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-6_20edcdb3155d5c877645458aae98228b'}\n\n```{.r .cell-code}\n# Remove empty elements from bike_prices\nbike_prices <- lapply(bike_prices, function(z){ z[!is.na(z) & z != \"\"]})\nbike_prices\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [[1]]\n#> [1] \"2999\" \"1199\" \"1399\" \"749\"  \"599\"  \"299\"\n```\n:::\n:::\n\nFinally, a table can be created, linking bike names and prices.\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-7_ccd12ef3baa50b6d6b209be9f8850935'}\n\n```{.r .cell-code}\n# Create table\nbike_infos <- map2_dfr(bike_names, bike_prices, ~ tibble(Name = .x, Price = .y))\nbike_infos\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Name\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Price\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"JEALOUS\",\"2\":\"2999\"},{\"1\":\"JEALOUS AL\",\"2\":\"1199\"},{\"1\":\"CRAGGER\",\"2\":\"1399\"},{\"1\":\"ZR TEAM\",\"2\":\"749\"},{\"1\":\"ZR LADY\",\"2\":\"599\"},{\"1\":\"SLUSH\",\"2\":\"299\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}